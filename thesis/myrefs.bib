@article{SoS,
    author={Fahed Alkhabbas and Romina Spalazzese and Paul Davidsson},
    journal={Proceedings of the 2nd edition of Swedish Workshop on the Engineering of Systems of Systems (SWESOS 2016)},
    title={IoT-based Systems of Systems},
    year={2016}
}

@article{applications_iot,
    author = {Bandyopadhyay, Debasis and Sen, Jaydip},
    year = {2011},
    month = {05},
    pages = {49 - 69},
    title = {Internet of Things: Applications and Challenges in Technology and Standardization},
    volume = {58},
    journal = {Wireless Personal Communications},
    doi = {10.1007/s11277-011-0288-5}
}

@ARTICLE{human_in_the_loop_survey,
    author={D. S. {Nunes} and P. {Zhang} and J. {Sá Silva}},
    journal={IEEE Communications Surveys Tutorials},
    title={A Survey on Human-in-the-Loop Applications Towards an Internet of All},
    year={2015},
    volume={17},
    number={2},
    pages={944-965},
    keywords={human computer interaction;Internet of Things;telecommunication control;wireless sensor networks;human-in-the-loop applications;Internet of All;Internet of Things;cyber-physical systems;human-in-the-loop CPS;human-centric applications;control loop;human-in-the-loop controls;human intents;psychological states;sensory data;taxonomic exercise;Sensors;Wireless sensor networks;Internet;Tutorials;Psychology;Monitoring;Mathematical model;Human-in-the-loop;Cyber-Physical Systems;Internet of All;Human-in-the-loop;cyber-physical systems;internet of all},
    doi={10.1109/COMST.2015.2398816},
    ISSN={2373-745X},
    month={Secondquarter},
}

@article{iot_future_direction,
    author = {Gubbi, Jayavardhana and Buyya, Rajkumar and Marusic, Slaven and Palaniswami, Marimuthu},
    year = {2012},
    month = {07},
    pages = {},
    title = {Internet of Things (IoT): A Vision, Architectural Elements, and Future
    Directions},
    volume = {29},
    journal = {Future Generation Computer Systems},
    doi = {10.1016/j.future.2013.01.010}
}

@ARTICLE{6851114,
    author={S. {Chen} and H. {Xu} and D. {Liu} and B. {Hu} and H. {Wang}},
    journal={IEEE Internet of Things Journal},
    title={A Vision of IoT: Applications, Challenges, and Opportunities With China Perspective},
    year={2014},
    volume={1},
    number={4},
    pages={349-359},
    keywords={Internet of Things;research and development;China;Internet of Things;IoT development;R&D plans;IoT architecture;Standards;Industries;Vehicles;Computer architecture;Sensors;Monitoring;Internet of Things (IoT);IoT application;IoT architecture;IoT challenge;IoT standardization},
    doi={10.1109/JIOT.2014.2337336},
    ISSN={2372-2541},
    month={Aug},
}

@ARTICLE{ISOIEC,
    author={ISO/IEC  JTC  1},
    title={Internet  of  things  (iot)  -  preliminary  report},
    journal={ISO,Tech. Rep.},
    year={2014},
}

@article{tanweer,
    author = {Alam, Tanweer},
    year = {2018},
    month = {05},
    pages = {},
    title = {A Reliable Communication Framework and Its Use in Internet of Things (IoT)},
    volume = {3}
}

@INPROCEEDINGS{standard-iot,
    author={S. A. {Al-Qaseemi} and H. A. {Almulhim} and M. F. {Almulhim} and S. R. {Chaudhry}},
    booktitle={2016 Future Technologies Conference (FTC)},
    title={IoT architecture challenges and issues: Lack of standardization},
    year={2016},
    volume={},
    number={},
    pages={731-738},
    keywords={Internet of Things;standardisation;IoT architecture;standardization;Internet of Things;connected things heterogeneity;IoT;IoT Architecture;Machine to Machine (M2M);IoT Standardization;Thread and 6LoPAN},
    doi={10.1109/FTC.2016.7821686},
    ISSN={null},
    month={Dec},
}

@article{SLR_guidelines,
    title = "Guidelines for conducting systematic mapping studies in software engineering: An update",
    journal = "Information and Software Technology",
    volume = "64",
    pages = "1 - 18",
    year = "2015",
    issn = "0950-5849",
    doi = "https://doi.org/10.1016/j.infsof.2015.03.007",
    url = "http://www.sciencedirect.com/science/article/pii/S0950584915000646",
    author = "Kai Petersen and Sairam Vakkalanka and Ludwik Kuzniarz",
    keywords = "Systematic mapping studies, Software engineering, Guidelines",
}

@book{IoT_principles_and_paradigms,
    author = {Buyya, Rajkumar and Dastjerdi, Amir Vahid},
    title = {Internet of Things: Principles and Paradigms},
    year = {2016},
    isbn = {012805395X, 9780128053959},
    edition = {1st},
    publisher = {Morgan Kaufmann Publishers Inc.},
    address = {San Francisco, CA, USA},
} 

@article{mobile_cloud,
    title = "Adaptive resource discovery in mobile cloud computing",
    journal = "Computer Communications",
    volume = "50",
    pages = "119 - 129",
    year = "2014",
    note = "Green Networking",
    issn = "0140-3664",
    doi = "https://doi.org/10.1016/j.comcom.2014.02.006",
    url = "http://www.sciencedirect.com/science/article/pii/S0140366414000590",
    author = "Wei Liu and Takayuki Nishio and Ryoichi Shinkuma and Tatsuro Takahashi",
    keywords = "Adaptive resource discovery, Energy-efficient, Heterogeneous wireless networks, Mobile cloud computing",
    abstract = "Mobile cloud computing (MCC) is aimed at integrating mobile devices with cloud computing. It is one of the most important concepts that have emerged in the last few years. Mobile devices, in the traditional agent-client architecture of MCC, only utilize resources in the cloud to enhance their functionalities. However, modern mobile devices have many more resources than before. As a result, researchers have begun to consider the possibility of mobile devices themselves sharing resources. This is called the cooperation-based architecture of MCC. Resource discovery is one of the most important issues that need to be solved to achieve this goal. Most of the existing work on resource discovery has adopted a fixed choice of centralized or flooding strategies. Many improved versions of energy-efficient methods based on both strategies have been proposed by researchers due to the limited battery life of mobile devices. This paper proposes a novel adaptive method of resource discovery from a different point of view to distinguish it from existing work. The proposed method automatically transforms between centralized and flooding strategies to save energy according to different network environments. Theoretical models of both energy consumption and the quality of response information are presented in this paper. A heuristic algorithm was also designed to implement the new adaptive method of resource discovery. The results from simulations demonstrated the effectiveness of the strategy and the efficiency of the proposed heuristic method."
}

@inproceedings{mobile_cloud_heterogeneous,
    author = {Nishio, Takayuki and Shinkuma, Ryoichi and Takahashi, Tatsuro and Mandayam, Narayan B.},
    title = {Service-Oriented Heterogeneous Resource Sharing for Optimizing Service Latency in Mobile Cloud},
    year = {2013},
    isbn = {9781450322065},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    url = {https://doi.org/10.1145/2492348.2492354},
    doi = {10.1145/2492348.2492354},
    booktitle = {Proceedings of the First International Workshop on Mobile Cloud Computing & Networking},
    pages = {19–26},
    numpages = {8},
    keywords = {cloud computing, service-oriented, mobile cloud, heterogeneous resource sharing, fog computing},
    location = {Bangalore, India},
    series = {MobileCloud ’13}
}

@ARTICLE{connecting_fog_and_cloud,
    author={D. S. {Linthicum}},
    journal={IEEE Cloud Computing},
    title={Connecting Fog and Cloud Computing},
    year={2017},
    volume={4},
    number={2},
    pages={18-20},
    keywords={cloud computing;fog computing;cloud computing;Internet of Things;IoT;data processing;public cloud;Cloud computing;Internet of Things;Standards;Sensors;Computer architecture;Edge computing;Databases;cloud computing;cloud tidbits;Internet of Things (IoT);OpenFog;fog computing},
    doi={10.1109/MCC.2017.37},
    ISSN={2372-2568},
    month={March},
}
  
@book{fog_computing_book,
    author = {Rahmani, Amir M. and Liljeberg, Pasi and Preden, Jrgo-Sren and Jantsch, Axel},
    title = {Fog Computing in the Internet of Things: Intelligence at the Edge},
    year = {2017},
    isbn = {3319576380},
    publisher = {Springer Publishing Company, Incorporated},
    edition = {1st},
}

@INPROCEEDINGS{edge_computing,
    author={C. {Martín Fernández} and M. {Díaz Rodríguez} and B. {Rubio Muñoz}},
    booktitle={2018 IEEE 21st International Symposium on Real-Time Distributed Computing (ISORC)},
    title={An Edge Computing Architecture in the Internet of Things},
    year={2018},
    volume={},
    number={},
    pages={99-102},
    keywords={cloud computing;Internet of Things;IoT devices;cloud communications;edge computing architecture;λ-CoAP architecture;edge computing deployment;disruptive technology;cloud computing;edge smart gateways;Computer architecture;Cloud computing;Logic gates;Containers;Edge computing;Virtualization;Real-time systems;internet of things;edge computing;coap;lambda architecture},
    doi={10.1109/ISORC.2018.00021},
    ISSN={2375-5261},
    month={May},
}

@ARTICLE{edge_computing_2019,
    author={W. {Shi} and G. {Pallis} and Z. {Xu}},
    journal={Proceedings of the IEEE},
    title={Edge Computing [Scanning the Issue]},
    year={2019},
    volume={107},
    number={8},
    pages={1474-1481},
    keywords={Special issues and sections;Edge computing;Internet of Things;Software defined networking;Machine learning;Ecosystems;Privacy;Resource management},
    doi={10.1109/JPROC.2019.2928287},
    ISSN={1558-2256},
    month={Aug},
}

@ARTICLE{promise_of_edge_computing,
    author={W. {Shi} and S. {Dustdar}},
    journal={Computer},
    title={The Promise of Edge Computing},
    year={2016},
    volume={49},
    number={5},
    pages={78-81},
    keywords={cloud computing;data handling;data privacy;Internet of Things;security of data;edge computing;Internet of Things;cloud services;data processing;Cloud computing;Mobile handsets;Internet of things;Security;Data privacy;Image edge detection;Privacy;Internet of Things;Cloud Cover;cloud;edge computing;mobile computing;Internet;data processing;big data},
    doi={10.1109/MC.2016.145},
    ISSN={1558-0814},
    month={May},
}

@INPROCEEDINGS{iot_layers,
    author={ {Miao Yun} and {Bu Yuxin}},
    booktitle={2010 International Conference on Advances in Energy Engineering},
    title={Research on the architecture and key technology of Internet of Things (IoT) applied on smart grid},
    year={2010},
    volume={},
    number={},
    pages={69-72},
    keywords={Internet;power engineering computing;smart power grids;smart grid;Internet-of-things infrastructure;IoT infrastructure;Monitoring;Biomedical monitoring;Fires;Biological system modeling;Computational modeling;Object recognition;Security},
    doi={10.1109/ICAEE.2010.5557611},
    ISSN={null},
    month={June},
}


@article{vpl_definition_shu,
    author = {Shu, N. C.},
    title = {Visual Programming: Perspectives and Approaches},
    year = {1999},
    issue_date = {June 1999},
    publisher = {IBM Corp.},
    address = {USA},
    volume = {38},
    number = {2–3},
    issn = {0018-8670},
    url = {https://doi.org/10.1147/sj.382.0199},
    doi = {10.1147/sj.382.0199},
    journal = {IBM Syst. J.},
    month = jun,
    pages = {199–221},
    numpages = {23}
}

@ARTICLE{scaling_vpls,
    author={M. M. {Burnett} and M. J. {Baker} and C. {Bohus} and P. {Carlson} and S. {Yang} and P. {Van Zee}},
    journal={Computer},
    title={Scaling up visual programming languages},
    year={1995},
    volume={28},
    number={3},
    pages={45-54},
    keywords={visual languages;visual programming;system documentation;interactive systems;visual programming languages;VPLs;large scale programming problems;problem domain standpoint;visual application domains;user interface design;scientific visualization;general purpose programming;scaling up problem;VPL systems;static representation;screen real estate;documentation;programming language issues;procedural abstraction;interactive visual data abstraction;type checking;persistence;Computer languages;Large-scale systems;Logic programming;Programming profession;Data structures;User interfaces;Data visualization;Financial management;Timing;Documentation},
    doi={10.1109/2.366157},
    ISSN={1558-0814},
    month={March},
}

% not used
@book{vpl-book,
    author = {Chang, S K},
    title = {Handbook of Software Engineering and Knowledge Engineering},
    publisher = {World Scientific Publishing Company},
    year = {2002},
    doi = {10.1142/4603-vol2},
    address = {},
    edition   = {},
    URL = {https://www.worldscientific.com/doi/abs/10.1142/4603-vol2},
    eprint = {https://www.worldscientific.com/doi/pdf/10.1142/4603-vol2}
}

@article{vpls_survey,
    author = {Boshernitsan, Marat and Downes, Michael},
    year = {1998},
    month = {08},
    pages = {},
    title = {Visual Programming Languages: A Survey}
}

% Not sure if needed, but it is interesting
@INPROCEEDINGS{fog_computing_task_distribution,
    author={Z. {Ennya} and M. Y. {Hadi} and A. {Abouaomar}},
    booktitle={2018 6th International Conference on Wireless Networks and Mobile Communications (WINCOM)},
    title={Computing Tasks Distribution in Fog Computing: Coalition Game Model},
    year={2018},
    volume={},
    number={},
    pages={1-4},
    keywords={cloud computing;game theory;resource allocation;computing tasks output content;edge computing;offloading;fog computing networks;edge devices;computing capabilities;computational tasks;fogs resources;tasks distribution;coalition game model;load balancing;Task analysis;Games;Cloud computing;Delays;Edge computing;Load modeling;Internet of Things;Coalition games;Fog computing;Fog to Fog communication},
    doi={10.1109/WINCOM.2018.8629587},
    ISSN={null},
    month={Oct},
}

%%%%%%%%% SLR %%%%%%%%%

@inproceedings{orcc_extension,
    abstract = {The latest wave of connected digital systems, nowadays called Internet of Things (IoT) promises various gains, especially in terms of significant ease of data access. A large number of different platforms for IoT applications, however, makes their development difficult and time-consuming leading to projects that are failed to be on time, on budget or fully completed. To address the platform heterogeneity, this paper presents the ongoing work on development environment called Orcc-IoT. Orcc-IoT facilitates the development of IoT by combining dataflow modelling language, heterogeneous code generator and the library of ready-made IoT actors. The utilisation of Orcc-IoT in development is expected to increase the quality, and to reduce the development costs and time-to-market of IoT applications.},
    annote = {- Pros: VPL, code generator IoT, open source
    - Cons: new VPL, less developed yet
    Summary: New VPL, fast read},
    author = {Paller, G{\'{a}}bor and Bezati, Endri and Tau{\v{s}}an, Neboj{\v{s}}a and Farkas, G{\'{a}}bor and {\'{E}}lo, G{\'{a}}bor},
    booktitle = {MODELSWARD 2019 - Proceedings of the 7th International Conference on Model-Driven Engineering and Software Development},
    doi = {10.5220/0007496804280434},
    isbn = {9789897583582},
    keywords = {Code Generator,Dataflow,Eclipse,IDE,IoT,Orcc},
    mendeley-groups = {Pack 1,Phase2/1},
    pages = {428--434},
    title = {{Dataflow-based heterogeneous code generator for IoT applications}},
    year = {2019}
}

@article{devify,
    address = {New York, NY, USA},
    annote = {- Pros: IoT, Framework, VPL? not sure
    - Cons: 2017/2018 rip development
    Summary: Another one to add to list of frameworks only maybe},
    author = {Chen, Jollen},
    doi = {10.1145/3231535.3231539},
    issn = {1551-3688},
    journal = {ACM SIGBED Review},
    keywords = {decentralized,flow-based programming,internet of things,interoperability,peer-to-peer,web of things},
    mendeley-groups = {Pack 1,Phase2,Phase2/1},
    month = {jun},
    number = {2},
    pages = {31--36},
    publisher = {ACM},
    title = {{Devify}},
    url = {http://doi.acm.org/10.1145/3231535.3231539},
    volume = {15},
    year = {2018}
}

@article{personalization_of_context_dependent_apps,
    abstract = {Our life is characterized by the presence of a multitude of interactive devices and smart objects exploited for disparate goals in different contexts of use. Thus, it is impossible for application developers to predict at design time the devices and objects users will exploit, how they will be arranged, and in which situations and for which objectives they will be used. For such reasons, it is important to make end users able to easily and autonomously personalize the behaviour of their Internet of Things applications, so that they can better comply with their specific expectations. In this paper, we present a method and a set of tools that allow end users without programming experience to customize the context-dependent behaviour of their Web applications through the specification of trigger-action rules. The environment is able to support end-user specification of more flexible behaviour than what can be done with existing commercial tools, and it also includes an underlying infrastructure able to detect the possible contextual changes in order to achieve the desired behaviour. The resulting set of tools is able to support the dynamic creation and execution of personalized application versions more suitable for users' needs in specific contexts of use. Thus, it represents a contribution to obtaining low threshold/high ceiling environments. We also report on an example application in the home automation domain, and a user study that has provided useful positive feedback.},
    address = {New York, NY, USA},
    annote = {- Pros: BDD in IoT},
    author = {Ghiani, Giuseppe and Manca, Marco and Paterno, Fabio and Santoro, Carmen},
    doi = {10.1145/3057861},
    issn = {15577325},
    journal = {ACM Transactions on Computer-Human Interaction},
    keywords = {End-user development,internet of things,trigger-action programming},
    mendeley-groups = {Pack 1,Phase2/1},
    month = {apr},
    number = {2},
    pages = {14:1----14:33},
    publisher = {ACM},
    title = {{Personalization of context-dependent applications through trigger-action rules}},
    url = {http://doi.acm.org/10.1145/3057861},
    volume = {24},
    year = {2017}
}

@inproceedings{wireme,
    abstract = {In this paper we present the work in progress of WireMe IoT development platform, a simple way to deploy IoT systems in an intuitive approach. WireMe platforms' simplified software and hardware modules enables users to deploy personalized web interface and program their hardware modules to achieve their home automation tasks without having deep technical knowledge in either of the above domains, with the help of visual programming. Apart from that, advanced users may extend this approach with the framework provided so that they can build their hardware and software modules to support our WireMe IoT platform as well. With this platform, kids can learn to build programming logics and learn about programming with code generation as well as people can build their typical IoT automation systems to monitor and control their IoT modules.},
    annote = {Another framework},
    author = {Pathirana, D. and Sonnadara, S. and Hettiarachchi, M. and Siriwardana, H. and Silva, C.},
    booktitle = {3rd International Moratuwa Engineering Research Conference, MERCon 2017},
    doi = {10.1109/MERCon.2017.7980463},
    isbn = {9781509064915},
    keywords = {IoT,MQTT,code generation,home automation,visual programming},
    mendeley-groups = {Pack 1,Phase2/1},
    pages = {93--98},
    title = {{WireMe - IoT development platform for everyone}},
    year = {2017}
}

@inproceedings{desolda,
    abstract = {In recent years, smart objects are increasingly pervading the environments we live in. For HCI researchers, an important challenge is how non-technical users can establish the behavior of such devices. This poster presents a new technology implementing a tangible-programming paradigm, which allows non-programmers to synchronize the behavior of ecologies of smart objects, thus determining the creation and customization of smart environments.},
    address = {New York, NY, USA},
    annote = {Pros: Tangible programming; Internet of Thing;
    Cons: Earlier stages, sh*t},
    author = {Desolda, Giuseppe and Malizia, Alessio and Turchi, Tommaso},
    booktitle = {Proceedings of the Workshop on Advanced Visual Interfaces AVI},
    doi = {10.1145/3206505.3206562},
    isbn = {9781450356169},
    keywords = {End-User Development,Internet of Thing,Tangible programming},
    mendeley-groups = {Pack 1,Phase2/1},
    pages = {59:1----59:3},
    publisher = {ACM},
    series = {AVI '18},
    title = {{A tangible-programming technology supporting end-user development of smart-environments}},
    url = {http://doi.acm.org/10.1145/3206505.3206562},
    year = {2018}
}

@inproceedings{pre_mobile_apps_rpi,
    abstract = {Learning about sensor technology and actuator early is important as a step towards knowing and introducing of advanced technologies based on Internet of Things (IoT). The difficulties are how to learn sensor technology and move the actuator with accessing General Purpose Input Output (GPIO) of Raspberry Pi 3 Platforms using programming language syntax which often confusing and difficult to understand. To help people learning IoT by using Raspberry Pi 3 with an interesting Android apps, we believe that this learning module can integrate about the ease and attractiveness of IoT System Editor based on Android apps. This research create a mobile programming apps based on Android which people can build IoT project easily with GUI without program and middleware based on Raspberry Pi to connect between apps and hardware with especially task to manage data communication, data flow, and device driver. Hopefully new developer can develop the IoT application easily by using Android mobile visual programming that combined with Raspberry Pi 3 platform.},
    annote = {Sum: VPL android app to develop IoT apps},
    author = {Besari, Adnan Rachmat Anom and Wobowo, Iwan Kurnianto and Sukaridhoto, Sritrusta and Setiawan, Ricky and Rizqullah, Muh Rifqi},
    booktitle = {Proceedings - International Electronics Symposium on Knowledge Creation and Intelligent Computing, IES-KCIC 2017},
    doi = {10.1109/KCIC.2017.8228460},
    isbn = {9781538607169},
    keywords = {Android,IoT,Middleware,RaspberryPi,Visual Programming},
    mendeley-groups = {Pack 1,Phase2/1},
    pages = {50--54},
    title = {{Preliminary design of mobile visual programming apps for Internet of Things applications based on Raspberry Pi 3 platform}},
    volume = {2017-Janua},
    year = {2017}
}

@article{viple,
    abstract = {This study presents the authors{\&}{\#}x2019; recent research and application of a new visual programming language and its development environment: VIPLE (Visual IoT/Robotics Programming Language Environment) at Arizona State University (ASU). ASU VIPLE supports a variety of IoT devices and robots based on an open architecture. Based on computational thinking, VIPLE supports the integration of engineering design process, workflow, fundamental programming concepts, control flow, parallel computing, event-driven programming, and service-oriented computing seamlessly into a wide range of curricula, such as introduction to computing, introduction to engineering, service-oriented computing, and software integration. It is actively used at ASU in several sections of FSE 100: Introduction to Engineering and in CSE 446: Software Integration and Engineering, as well as in several other universities worldwide.},
    annote = {Summary: New Framework to develop IoT using VPL but using robots too.
    Maybe not useful or just another one},
    author = {{De Luca}, Gennaro and Li, Zhongtao and Mian, Sami and Chen, Yinong},
    doi = {10.1049/trit.2018.0016},
    issn = {2468-2322},
    journal = {CAAI Transactions on Intelligence Technology},
    keywords = {visual programming;programming languages;Internet},
    mendeley-groups = {Pack 1,Phase2/1},
    number = {2},
    pages = {119--130},
    title = {{Visual programming language environment for different IoT and robotics platforms in computer science education}},
    volume = {3},
    year = {2018}
}

@article{visit,
    abstract = {Empowering end-users to wire Internet of Things (IoT) objects (things and services) together would allow them to more easily conceive and realize interesting IoT solutions. A challenge lies in devising a simple end-user development approach to support the specification of transformations, which can bridge the mismatch in the data being exchanged among IoT objects. To tackle this challenge, we present Visual Simple Transformations (ViSiT) as an approach that allows end-users to use a jigsaw puzzle metaphor for specifying transformations that are automatically converted into underlying executable workflows. ViSiT is explained by presenting meta-models and an architecture for implementing a system of connected IoT objects. A tool is provided for supporting end-users in visually developing and testing transformations. Another tool is also provided for allowing software developers to modify, if they wish, a transformation's underlying implementation. This work was evaluated from a technical perspective by developing transformations and measuring ViSiT's efficiency and scalability and by constructing an example application to show ViSiT's practicality. A study was conducted to evaluate this work from an end-user perspective, and its results showed positive indications of perceived usability, learnability, and the ability to conceive real-life scenarios for ViSiT.},
    address = {New York, NY, USA},
    annote = {Another new framework but 43 pages article :')},
    author = {Akiki, Pierre A. and Bandara, Arosha K. and Yu, Yijun},
    doi = {10.1145/3057857},
    issn = {15577325},
    journal = {ACM Transactions on Computer-Human Interaction},
    keywords = {End-user development,Internet of things,Transformations},
    mendeley-groups = {Pack 1,Phase2/1},
    month = {apr},
    number = {2},
    pages = {10:1----10:43},
    publisher = {ACM},
    title = {{Visual simple transformations: Empowering end-users to wire internet of things objects}},
    url = {http://doi.acm.org/10.1145/3057857},
    volume = {24},
    year = {2017}
}

@inproceedings{ivy,
    abstract = {The availability of embedded, digital systems has led to a multitude of interconnected sensors and actuators being distributed among smart objects and built environments. Programming and understanding the behaviors of such systems can be challenging given their inherent spatial nature. To explore how spatial and contextual information can facilitate the authoring of intelligent environments, we introduce Ivy, a spatially situated visual programming tool using immersive virtual reality. Ivy allows users to link smart objects, insert logic constructs, and visualize real-time data flows between real-world sensors and actuators. Initial feedback sessions show that participants of varying skill levels can successfully author and debug programs in example scenarios.},
    annote = {- Pros: VPL and IOT with Mixed Reality for Spatial Tasks
    - Cons: WIP},
    author = {Ens, Barrett and Anderson, Fraser and Grossman, Tovi and Annett, Michelle and Irani, Pourang and Fitzmaurice, George},
    booktitle = {Proceedings - Graphics Interface},
    isbn = {9780994786821},
    issn = {07135424},
    keywords = {Immersive analytics,Internet of things,Mixed reality,Spatial interaction,Virtual reality,Visual programming language},
    mendeley-groups = {Pack 1,Phase2/1},
    pages = {156--163},
    title = {{Ivy: Exploring spatially situated visual programming for authoring and understanding intelligent environments}},
    year = {2017}
}

@inproceedings{Valsamakis2017,
    abstract = {Ambient Assisted Living (AAL) promotes independent living, while the Internet of Things (IoT) proliferates as the dominant technology for the deployment of pervasive smart objects. In this work, we focus on the delivery of an AAL framework utilizing IoT technologies, while addressing the demand for very customized automations due to the diverse and fluid (can change over time) user requirements. The latter turns the idea of a general-purpose application suite to fit all users mostly unrealistic and suboptimal. Driven by the popularity of visual programming tools, especially for children, we focused in directly enabling end-users, including carers, family or friends, even the elderly/disabled themselves, to easily craft and modify custom automations. In this paper we firstly discuss scenarios of highly personalized AAL automations through smart objects, and then elaborate on the capabilities of the visual tools we are currently developing on a basis of a brief case study.},
    annote = {Read book page 159.
    Sum: New framework for VPL in IoT},
    author = {Valsamakis, Yannis and Savidis, Anthony},
    booktitle = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
    doi = {10.1007/978-3-319-56997-0_13},
    isbn = {9783319569963},
    issn = {16113349},
    keywords = {Ambient assisted living,End-user development,Internet of Things,Visual programming},
    mendeley-groups = {Pack 1,Phase2/1},
    pages = {159--174},
    title = {{Visual end-user programming of personalized AAL in the internet of things}},
    volume = {10217 LNCS},
    year = {2017}
}

@inproceedings{Belsa2018,
    abstract = {Applications and Services are located at the top of the IoT deployments and represent a big portion of the IoT stack. Each Platform has several IoT Services and these use to be domain-oriented and very heterogeneous. This heterogeneity hinders the interoperability between services and applications from different IoT Platforms. Flow Based Programming is a paradigm that allows the interconnection of services and the creation of an execution flow between them. There are several solutions that use this paradigm within the IoT platforms, but none is mainly focused in the aim of connect services from different IoT platforms. To address this, a methodology is described to develop functionalities to access to the services, and an architecture is provided with different components to offer a solution to this interoperability problem. This solution offers advantages in the registry, cataloging and discovery of services, and in the creation and management of composite IoT Services. Finally, this paper show a use case related with transport and logistic to validate this approach.},
    annote = {- Pros: Node-RED
    - Cons: Discovery devices using Node-RED},
    author = {Belsa, Andreu and Sarabia-Jacome, David and Palau, Carlos E. and Esteve, Manuel},
    booktitle = {Proceedings - 2018 IEEE International Conference on Cloud Engineering, IC2E 2018},
    doi = {10.1109/IC2E.2018.00059},
    isbn = {9781538650080},
    keywords = {Flow based programming,Interoperability,IoT applications and services,Node-RED,Service composition,Service virtualization},
    mendeley-groups = {Pack 1,Phase2/1},
    pages = {304--309},
    title = {{Flow-based programming interoperability solution for IoT platform applications}},
    year = {2018}
}

@inproceedings{warble,
    abstract = {Advances in sensing and networking along with ubiquitous Internet connectivity have paved the way for today's massive Internet of Thing (IoT) market. Despite the vast potential of connecting to myriad devices across homes, office buildings, and public spaces, there is still a large need to unify the scattered protocols, hubs, and cloud services while personalizing end-user experiences. Enabling personalized IoT experiences requires an expressive and flexible middleware that enables simplified development of applications that address diverse individual needs and seamlessly cross multiple vendors and administrative domains. We introduce Warble: a middleware for such personalized IoT applications; Warble encapsulates device and protocol complexities, represents interaction with IoT devices as flexible programming abstractions, and enables applications to learn from their prior interactions in the IoT on behalf of their users. In this paper, we present Warble's architectural abstractions, API, and implementation. We then evaluate the middleware through a case study application using our Android implementation; this evaluation showcases the novelty of the Warble architecture and its programming abstractions.},
    address = {Piscataway, NJ, USA},
    annote = {Another framework maybe trash},
    author = {Saputra, Yosef and Hua, Jie and Wendt, Nathaniel and Julien, Christine and Roman, Gruia-Catalin},
    booktitle = {Proceedings of the 6th International Conference on Mobile Software Engineering and Systems},
    doi = {10.1109/mobilesoft.2019.00026},
    isbn = {9781728133959},
    keywords = {context-aware services,internet of things,pervasive computing},
    mendeley-groups = {Pack 1,Phase2/1},
    pages = {128--139},
    publisher = {IEEE Press},
    series = {MOBILESoft '19},
    title = {{WARBLE: Programming Abstractions for Personalizing Interactions in the Internet of Things}},
    url = {http://dl.acm.org/citation.cfm?id=3340730.3340755},
    year = {2019}
}

@inproceedings{chariot,
    abstract = {Despite the breadth of related work, enabling end-users of varying technical ability to leverage sensor data to control their Internet of Things (IoT)-enabled installations remains a challenge. This work proposes a unified interface that provides three building blocks to support the end-user configuration of IoT environments: capturing higher-level events in the installation through virtual sensors, construction of automation rules with a visual overview of the current configuration and support for sharing configuration between end-users using a recommendation mechanism.},
    author = {Tomlein, Mat{\'{u}}{\v{s}} and Boovaraghavan, Sudershan and Agarwal, Yuvraj and Dey, Anind K.},
    booktitle = {ACM International Conference Proceeding Series},
    doi = {10.1145/3131542.3140261},
    isbn = {9781450353182},
    keywords = {End-user programming,Visual programming},
    mendeley-groups = {Pack 2,Phase2/2},
    title = {{CharIoT: An end-user programming environment for the IoT}},
    year = {2017}
}

@inproceedings{fred,
    abstract = {IoT developers need to integrate a variety of protocols, backend components and services; they often need to pre and post-process data as well as react to changes in the real world. Data flow programming tools have been introduced in a number of related domains to provide a flexible, but easy to use visual programming environment for rapid development. The open source Node-RED system provides such a tool for IoT applications, but is limited to executing a single flow file in a single thread. In this paper we describe the design of our system called the Front-End for Node-RED (FRED) that manages multiple instances of Node-RED for logged in users, allowing Node-RED to be used as a cloud-hosted data flow mashup tool for the IoT. We present some examples of how some of our 1800+ users are using FRED for IoT mashups, and some of the challenged we faced in implementing the FRED system.},
    author = {Blackstock, Michael and Lea, Rodger},
    booktitle = {Proceedings of the 1st International Workshop on Mashups of Things and APIs, MOTA 2016},
    doi = {10.1145/3007203.3007214},
    isbn = {9781450346696},
    keywords = {Data flow programming,Internet of Things,IoT mashups,Node-RED},
    mendeley-groups = {Pack 2,Phase2/2},
    title = {{FRED: A hosted data flow platform for the IoT}},
    year = {2016}
}

@article{eud_platform,
    abstract = {IoT devices are diverse in their characteristics and made by many vendors, hence the inter-operation among them is difficult. Especially, end users can't make their own programs by do-it-yourselves. IFTTT and Zapier platforms are designed to help end users to make them inter-operable easily and prevail in these days. Their approach is categorized into a Trigger-Action-Programming, in which trigger conditions and actions are already made by professional programmers of several IoT vendors and end users composite them into their own applications easily. But, their drawback is that the composition can be made at once in the first level, hence end users can't make more complicated applications. Our approach is based on a dataflow programming paradigm which resembles the TAP in that the internal actions are triggered when all the inputs of a node are prepared. In our approach, a composition of some atomic nodes becomes another atomic node, so the composition would continue iteratively. This feature is so generous that several visual programming languages like LabView are relied on the approach for various fields. We propose the overall architecture of our system and explain them. We also present Internet of Things examples of our approach, which shows that atomic dataflow objects can be associated to produce composite dataflow objects. And they are also composited to make more complex applications iteratively. We compare IFTTT, Zapier, and our approach qualitatively and show that end users can make more diverse and flexible applications in our approach.},
    author = {Eun, Seongbae and Jung, Jinman and Yun, Young Sun and So, Sun Sup and Heo, Junyoung and Min, Hong},
    doi = {10.3233/JIFS-169852},
    issn = {18758967},
    journal = {Journal of Intelligent and Fuzzy Systems},
    keywords = {IF This Then That(IFTTT),Internet of Things(IoT),Trigger-Action-Programming,automatic programming,dataflow approach},
    mendeley-groups = {Pack 2,Phase2/2},
    number = {6},
    pages = {6125--6131},
    title = {{An end user development platform based on dataflow approach for IoT devices}},
    volume = {35},
    year = {2018}
}

@inproceedings{wotflow_dnr,
    abstract = {Several web-based platforms have emerged to ease the development of interactive or near real-time IoT applications by providing a way to connect things and services together and process the data they emit using a data flow paradigm. While these platforms have been found to be useful on their own, many IoT scenarios require the coordination of computing resources across the network: on servers, gateways and devices themselves. To address this, we explore how to extend existing IoT data flow platforms to create a system suitable for execution on a range of run time environments, toward supporting distributed IoT programs that can be partitioned between servers, gateways and devices. Eventually we aim to automate the distribution of data flows using appropriate distribution mechanism, and optimization heuristics based on participating resource capabilities and constraints imposed by the developer.},
    author = {Blackstock, Michael and Lea, Rodger},
    booktitle = {ACM International Conference Proceeding Series},
    doi = {10.1145/2684432.2684439},
    isbn = {9781450330664},
    keywords = {Distributed data flow,Internet of things,Node-RED,Toolkits,Visual data flow languages,Web of things},
    mendeley-groups = {Pack 2,Phase2/2,Fog},
    pages = {34--39},
    title = {{Toward a distributed data flow platform for the Web of Things (Distributed Node-RED)}},
    volume = {08-October},
    year = {2014}
}

@inproceedings{vpl_uml,
    abstract = {Although there are many attempts to engineer a domain specific language for the Internet of Things, most of them forget the fact that with the evolving of the Internet of Things, the end user will probably be a common person without an engineering or software development background. The designers of the UML had the same problem: how to make a language powerful enough for the professionals, but at the same time simple enough to be understood by a non-technical end user that gives the requirements. Inspired by this idea a Visual Domain Specific Modeling Language was developed for the IoT and proved that it is powerful enough for the professional and at the same time simple enough to be used by non-technical users.},
    author = {Eterovic, Teo and Kaljic, Enio and Donko, Dzenana and Salihbegovic, Adnan and Ribic, Samir},
    booktitle = {2015 25th International Conference on Information, Communication and Automation Technologies, ICAT 2015 - Proceedings},
    doi = {10.1109/ICAT.2015.7340537},
    isbn = {9781467381468},
    keywords = {Domain Specific Modeling Language,Human computer interaction,Internet of Things,UML,Usability},
    mendeley-groups = {Pack 2,Phase2/2},
    title = {{An Internet of Things visual domain specific modeling language based on UML}},
    year = {2015}
}

@book{visual_paradigm_iot_solutions_development,
    abstract = {Despite the proliferation of Internet-of-Things (IoT) applications and services, there are still very few tools and techniques for developing IoT solutions in a visual fashion through minimal (or even) zero programming. In this paper we introduce a novel approach for developing IoT solution through visual development tools. The presented approach presents several advantages, in particular: (a) It leverages standards-based semantic models for sensors and IoT context (notably the W3 SSN ontology), (b) It is based on popular/mainstream web-based technologies (i.e. SPARQL, REST), (c) It provides a basis for integrated development of IoT services on the basis of a W3C SSN based Model Driven Architecture (MDA), (d) It is implemented as open source software as part of the OpenIoT open source project.},
    author = {Kefalakis, Nikos and Soldatos, John and Anagnostopoulos, Achilleas and Dimitropoulos, Panagiotis},
    booktitle = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
    doi = {10.1007/978-3-319-16546-2_4},
    isbn = {9783319165455},
    issn = {16113349},
    keywords = {Cloud computing,Internet-of-Things (IoT),Open source,Sensors,Visual tools},
    mendeley-groups = {Pack 2,Phase2/2},
    pages = {26--45},
    title = {{A visual paradigm for IoT solutions development}},
    volume = {9001},
    year = {2015}
}

@inproceedings{gimle,
    abstract = {Industrial products tend to be customized by third-parties for different use cases. This is currently supported by adding external Programmable Logic Controllers (PLC) to installations. As IoT software ecosystems become wide-spread, the need for such hardware will decrease. However, removing the controllers opens the challenge of configuring distributed industrial installations. This paper argues for modeling application requirements on industrial installations so that they can be evaluated automatically based on information about targeted installations. GIMLE, a visual language for modeling application requirements using expressive domain knowledge, is proposed. GIMLE enables modeling requirements on physical features of installations, which hasn't received significant attention in the related work. A study with domain experts is used to reflect on the proposed process. The scalability of the visual language is evaluated using a model for a real-world application. The support for reuse of requirements enabled us to build models that can add support for new installations without significant changes and with a slower increase in size the more components can be reused.},
    author = {Tomlein, Mat{\'{u}}{\v{s}} and Gr{\o}nb{\ae}k, Kaj},
    booktitle = {ACM International Conference Proceeding Series},
    doi = {10.1145/3131542.3131552},
    isbn = {9781450353182},
    keywords = {End-user programming,Modeling,Visual programming},
    mendeley-groups = {Pack 2,Phase2/2},
    title = {{A visual programming approach based on domain ontologies for configuring industrial IoT installations}},
    year = {2017}
}

@inproceedings{smart_block,
    abstract = {In this paper, we first propose a visual block language Smart Block for IoT, especially for SmartThings. We also developed a visual programming environment for Smart Block so that users can write their own SmartApps in this language easily, even though they are not expert programmers. We designed the language based on IoTa calculus, a core calculus for Internet of Things Automation that generalizes Event-Condition-Action (ECA) rules for home automation. We implemented a visual programming environment for Smart Block with Blockly, a client-side JavaScript library for creating visual block languages.},
    author = {Bak, Nayeon and Chang, Byeong Mo and Choi, Kwanghoon},
    booktitle = {Proceedings - International Computer Software and Applications Conference},
    doi = {10.1109/COMPSAC.2018.10199},
    isbn = {9781538626665},
    issn = {07303157},
    keywords = {Blockly,ECA rule,IoTa,Smart Block,SmartApp,SmartThings,Visual Block Language},
    mendeley-groups = {Pack 3,Phase2/3},
    pages = {32--37},
    title = {{Smart Block: A Visual Programming Environment for SmartThings}},
    volume = {2},
    year = {2018}
}

@inproceedings{ddflow,
    abstract = {Programming distributed applications in the IoT-edge environment is a cumbersome challenge. Developers are expected to seamlessly handle issues in dynamic reconfiguration, routing, state management, fault tolerance, and heterogeneous device capabilities. We introduce DDFLOW, a macroprogramming abstraction and accompanying runtime that provides an efficient means to program high-quality distributed applications that span a diverse and dynamic IoT network. We describe the programming model and primitives used to isolate application semantics from arbitrary deployment environments. Using DDFLOW leads to portable, visualizable, and intuitive applications. The accompanying system runtime enables dynamic scaling and adaptation, leading to improved end-to-end latency while preserving application behavior despite device failures.},
    address = {New York, NY, USA},
    author = {Noor, Joseph and Tseng, Hsiao Yun and Garcia, Luis and Srivastava, Mani},
    booktitle = {IoTDI 2019 - Proceedings of the 2019 Internet of Things Design and Implementation},
    doi = {10.1145/3302505.3310079},
    isbn = {9781450362832},
    keywords = {IoT networks,adaptation,declarative programming,distributed systems,dynamic reconfiguration,fault tolerance,macroprogramming,visualized programming},
    mendeley-groups = {Pack 3,Phase2/3},
    pages = {172--177},
    publisher = {ACM},
    series = {IoTDI '19},
    title = {{DDFlow: Visualized declarative programming for heterogeneous IoT networks}},
    url = {http://doi.acm.org/10.1145/3302505.3310079},
    year = {2019}
}

@inproceedings{mobile_apps_rpi,
    abstract = {The competition in this modern world must be followed by novice developers, especially students to improve competitiveness and creativity. But the complexity to make the programs for build IOT applications are difficult for beginner developers. After analyzing the problems and conditions, we need an application that used to simplify text-based programming into visual based programming to make it easy to understand. This paper describes how to control IoT project easily using visual programming with android application over the internet. The application is created by describing the functions of IoT application with Raspberry, then writers made the communication protocol and user interface design based on classification of software construction elements with object modeling in order to be understood by the user. The practical goal of this paper is to continue the previous work from design into usable application, controlling education robot, learn IoT with RaspberryPi, make Bluetooth and internet connection through database, special additional features like conditional programming and monitoring output. The Software User Testing is used to rate the application and the result from the questionnaire with SUS methodology show that the application has a total score of 72,9 out of 100 which means it has an adjective ranking with 'Good' scale, Grade scale in 'C' category and 'Acceptable' in Acceptability scale that conclude this application is accented and easy to use.},
    author = {Setiawan, Ricky and {Anom Besari}, Adnan Rachmat and Wibowo, Iwan Kurnianto and Rizqullah, Muh Rifqi and Agata, Dias},
    booktitle = {International Electronics Symposium on Knowledge Creation and Intelligent Computing, IES-KCIC 2018 - Proceedings},
    doi = {10.1109/KCIC.2018.8628483},
    isbn = {9781538680797},
    keywords = {Android,IoT,Middleware,RaspberryPi,Visual Programming},
    mendeley-groups = {Pack 3,Phase2/3},
    month = {oct},
    pages = {199--204},
    title = {{Mobile visual programming apps for internet of things applications based on raspberry Pi 3 platform}},
    year = {2019}
}

@inproceedings{ddf,
    abstract = {In this paper we examine the development of IoT applications from the perspective of the Fog Computing paradigm, where computing infrastructure at the network edge in devices and gateways is leverage for efficiency and timeliness. Due to the intrinsic nature of the IoT: heterogeneous devices/resources, a tightly coupled perception-action cycle and widely distributed devices and processing, application development in the Fog can be challenging. To address these challenges, we propose a Distributed Dataflow (DDF) programming model for the IoT that utilises computing infrastructures across the Fog and the Cloud. We evaluate our proposal by implementing a DDF framework based on Node-RED (Distributed Node-RED or D-NR), a visual programming tool that uses a flow-based model for building IoT applications. Via demonstrations, we show that our approach eases the development process and can be used to build a variety of IoT applications that work efficiently in the Fog.},
    author = {Giang, Nam Ky and Blackstock, Michael and Lea, Rodger and Leung, Victor C.M.},
    booktitle = {Proceedings - 2015 5th International Conference on the Internet of Things, IoT 2015},
    doi = {10.1109/IOT.2015.7356560},
    isbn = {9781467380584},
    keywords = {Distributed dataflow,Internet of Things,Node-RED,Programming models},
    mendeley-groups = {Pack 3,Fog,Phase2/3},
    pages = {155--162},
    title = {{Developing IoT applications in the Fog: A Distributed Dataflow approach}},
    year = {2015}
}

@inproceedings{pwct,
    abstract = {Developing IoT, Data Computing and Cloud Computing software requires different programming skills and different programming languages. This cause a problem for many companies and researchers that need to hires many programmers to develop a complete solution. The problem is related directly to the financial cost and the development time which are very important factors to many research projects. In this paper we present and propose the PWCT visual programming tool for developing IoT, Data Computing and Cloud Computing Applications and Systems without writing textual code directly. Using PWCT increase productivity and provide researchers with one visual programming tool to develop different solutions.},
    author = {Fayed, Mahmoud S. and Al-Qurishi, Muhammad and Alamri, Atif and Al-Daraiseh, Ahmad A.},
    booktitle = {ACM International Conference Proceeding Series},
    doi = {10.1145/3018896.3056782},
    isbn = {9781450347747},
    keywords = {Cloud Computing,Data Computing,Internet of Things,Knowledge Representation and Reasoning,Visual Programming},
    mendeley-groups = {Pack 3,Fog,Phase2/3},
    title = {{PWCT: Visual language for IoT and cloud computing applications and systems}},
    year = {2017}
}

@article{survey_vpl_iot,
    abstract = {Visual programming has transformed the art of programming in recent years. Several organizations are in race to develop novel ideas to run visual programming in multiple domains with Internet of Things. IoT, being the most emerging area of computing, needs substantial contribution from the visual programming paradigm for its technological propagation. This paper surveys visual programming languages being served for application development, especially in Internet of Things field. 13 such languages are visited from several popular research-electronic databases (e.g., IEEE Xplore, Science Direct, Springer Link, Google Scholar, Web of Science, and Postscapes) and compared under four key attributes such as programming environment, license, project repository, and platform supports. Grouped into two segments, open source and proprietary platform, these visual languages pertain few crucial challenges that have been elaborated in this literature. The main goal of this paper is to present existing VPLs per their parametric proforma to enable na{\"{i}}ve developers and researchers in the field of IoT to choose appropriate variant of VPL for particular type of application. It is also worth validating the usability and adaptability of VPLs that is essential for selection of beneficiary in terms of IoT.},
    author = {Ray, Partha Pratim},
    doi = {10.1155/2017/1231430},
    issn = {10589244},
    journal = {Scientific Programming},
    mendeley-groups = {Pack 2,Phase2,Phase2/3},
    title = {{A Survey on Visual Programming Languages in Internet of Things}},
    volume = {2017},
    year = {2017}
}


%%%%%%%%% EXPANDED RESEARCH %%%%%%%

@misc{node_red,
    author={OpenJS Foundation},
    title={{Node-RED}},
    year={2020},
    note={Last access 2020. [Online]},
    howpublished= {Available: \url{https://nodered.org/}}
}

@misc{netlabtoolkit,
    author={NETLab Toolkit},
    title={{NETLabTK: Tools for Tangible Design}},
    year={2020},
    note={Last access 2020. [Online]},
    howpublished= {Available: \url{www.netlabtoolkit.org/}}
}

@misc{noodl,
    author={NooDL},
    title={{NooDL}},
    year={2020},
    note={Last access 2020. [Online]},
    howpublished= {Available: \url{https://classic.getnoodl.com/}}
}

@misc{dglux5,
    author={DGLogik},
    title={{DGLux5}},
    year={2020},
    note={Last access 2020. [Online]},
    howpublished= {Available: \url{http://dglogik.com/products/dglux-for-dsa}}
}

@misc{attflowdesigner,
    author={AT\&T},
    title={{AT\&T Flow Designer}},
    year={2020},
    note={Last access 2020. [Online]},
    howpublished= {Available: \url{https://flow.att.com}}
}

@misc{graspio,
    author={Grasp IO Innovations Pvt. Ltd.},
    title={{GraspIO}},
    year={2020},
    note={Last access 2020. [Online]},
    howpublished= {Available: \url{https://www.grasp.io/}}
}

@misc{wyliodrin,
    author={Wyliodrin},
    title={{Wyliodrin}},
    year={2020},
    note={Last access 2020. [Online]},
    howpublished= {Available: \url{https://wyliodrin.com/}}
}

@misc{zenodys,
    author={Zenodys B.V.},
    title={{Zenodys}},
    year={2020},
    note={Last access 2020. [Online]},
    howpublished= {Available: \url{https://www.zenodys.com/}}
}

%%%%%%%%% DECENTRALIZED %%%%%%%%%%%

@INPROCEEDINGS{fog_at_the_edge,
    author={N. K. {Giang} and R. {Lea} and M. {Blackstock} and V. C. M. {Leung}},
    booktitle={2018 IEEE International Conference on Edge Computing (EDGE)},
    title={Fog at the Edge: Experiences Building an Edge Computing Platform},
    year={2018},
    volume={},
    number={},
    pages={9-16},
    keywords={cloud computing;Internet of Things;edge computing platform;technology advancement;network edge;communications;edge devices;edge network;context-dependent characteristics;application logic;large-scale IoT applications;distributed node-RED;open source node-RED tool;Cloud computing;Wires;Programming;Edge computing;Computational modeling;Buildings;Robots;edge;fog computing;exogenous;dataflow;coordination},
    doi={10.1109/EDGE.2018.00009},
    ISSN={null},
    month={July},
}

@ARTICLE{exogenous_coordination,
    author={N. K. {Giang} and R. {Lea} and V. C. M. {Leung}},
    journal={IEEE Access},
    title={Exogenous Coordination for Building Fog-Based Cyber Physical Social Computing and Networking Systems},
    year={2018},
    volume={6},
    number={},
    pages={31740-31749},
    keywords={cyber-physical systems;data flow computing;distributed programming;embedded systems;mobile computing;social networking (online);social networks;CPSCN systems;cyber physical social computing-and-networking systems;mobile phones;smart vehicles;computation activities;distributed dataflow programming model;application platform;social applications;physical world;fog computing systems;network access points;heterogeneous devices;distributed devices;cloud-based infrastructure;networking systems;smart embedded devices;communication activities;exogenous coordination model;computing resources;Edge computing;Computational modeling;Vehicle dynamics;Social network services;Cloud computing;Buildings;Context modeling;Cyber physical social computing and networking;fog computing;Internet of Things;exogenous coordination;data-flow},
    doi={10.1109/ACCESS.2018.2844336},
    ISSN={2169-3536},
    month={},
}

@INPROCEEDINGS{flow_based_programming_fog,
    author={T. {Szydlo} and R. {Brzoza-Woch} and J. {Sendorek} and M. {Windak} and C. {Gniady}},
    booktitle={2017 IEEE 26th International Conference on Enabling Technologies: Infrastructure for Collaborative Enterprises (WETICE)},
    title={Flow-Based Programming for IoT Leveraging Fog Computing},
    year={2017},
    volume={},
    number={},
    pages={74-79},
    keywords={cloud computing;data flow analysis;Internet of Things;resource allocation;flow-based programming;fog computing;cloud computing;network bandwidth optimization;IoT responsiveness;heterogeneous IoT devices;computational resources;data flow transformation;constrained resources;Cloud computing;Edge computing;Programming;Sensors;Image color analysis;Data processing},
    doi={10.1109/WETICE.2017.17},
    ISSN={null},
    month={June},
}

@inbook{fog_flow,
    author = {Sendorek, Joanna and Szydlo, Tomasz and Windak, Mateusz and Brzoza-Woch, Robert},
    year = {2019},
    month = {06},
    pages = {634-647},
    title = {FogFlow - Computation Organization for Heterogeneous Fog Computing Environments},
    doi = {10.1007/978-3-030-22744-9_49}
}

@article{fog_flow_orchestration,
    author = {Cheng, B. and Kovacs, E. and Kitazawa, A. and Terasawa, K. and Hada, T. and Takeuchi, M.},
    year = {2018},
    month = {11},
    pages = {48-53},
    title = {FogFlow: Orchestrating IoT services over cloud and edges},
    volume = {13},
    journal = {NEC Technical Journal}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


@inbook{inbook,
    author = {Sendorek, Joanna and Szydlo, Tomasz and Windak, Mateusz and Brzoza-Woch, Robert},
    year = {2019},
    month = {06},
    pages = {634-647},
    title = {FogFlow - Computation Organization for Heterogeneous Fog Computing Environments},
    doi = {10.1007/978-3-030-22744-9_49}
}
